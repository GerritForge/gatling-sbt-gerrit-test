{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b24b2bd2_7a505e1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1020920
      },
      "writtenOn": "2023-10-30T11:18:15Z",
      "side": 1,
      "message": "I am giving a V+1 as I have tested it on the CI with 3 users for 2 mins and with 5 users for 10 mins, both tests were successful. Although the `ListThenGetDetails` was not part of the run, due to my stupidity, i am still confident the tests will pass once this is merged.",
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26af138c_4570f978",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2023-10-31T09:56:22Z",
      "side": 1,
      "message": "Nit: if we have a single user (just to increase the likelihood), do we run the risk of creating two tags with the same name? In other words, would a UUID, for example, be safer?",
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867a2bb0_d1411fc5",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2023-10-31T09:56:22Z",
      "side": 1,
      "message": "Nit: Why `latestTagId`, and not just `tagId`? As far as I see I we don\u0027t have any other tag id assignments, no? `latest` suggests that we have other tag ids.",
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32d36a7d_961b4c51",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2023-10-31T09:56:22Z",
      "side": 1,
      "message": "Nit: isn\u0027t this all the tags for a given user? Maybe `tagsForUser` describes that better?",
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31b8fbaf_e4cdccfe",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-10-30T12:09:20Z",
      "side": 1,
      "message": "Where do we expect the HTTP status 204?\n\nThe documentation says:\n_\"If you donâ€™t define an explicit status check on HTTP requests or HTTP protocol, Gatling will perform an implicit check that will verify that the response status code is 2XX or 304.\"_",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 66,
        "endChar": 21
      },
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f6b7f39_f9091817",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1020920
      },
      "writtenOn": "2023-10-30T12:41:05Z",
      "side": 1,
      "message": "As with every other gatling test, we are relying on the implicit check that Gatling performs (what you quoted above). Do you want to add an explicit status check?",
      "parentUuid": "31b8fbaf_e4cdccfe",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 66,
        "endChar": 21
      },
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6158f83e_b817a7c4",
        "filename": "src/test/scala/gerritforge/scenarios/rest/tags/CreateAndDeleteMultipleTags.scala",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1020920
      },
      "writtenOn": "2023-10-31T09:53:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f6b7f39_f9091817",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 66,
        "endChar": 21
      },
      "revId": "5b2c8f2fb0034fec7f529ee4519e34843c99e59c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}