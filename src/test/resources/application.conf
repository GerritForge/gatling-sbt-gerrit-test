simulation {
  http-url = ${?HTTP_URL}
  ssh-url = ${?SSH_URL}

  repository = ${?REPOSITORY}

  reference-repository = ${?REFERENCE_REPOSITORY}

  num-users = 1
  num-users = ${?NUM_USERS}

  duration = "10 seconds"
  duration = ${?DURATION}

  backend = ""
  backend = ${?GIT_BACKEND}


  clone-scn-pct: ${?CLONE_SCN_PCT},
  clone-scn-pct: 82,
  post-comment-scn-pct: ${?POST_COMMENT_SCN_PCT},
  post-comment-scn-pct: 11,
  receive-pack-scn-pct: ${?RECEIVE_PACK_SCN_PCT},
  receive-pack-scn-pct: 4,
  submit-scn-pct: ${?SUBMIT_SCN_PCT},
  submit-scn-pct: 2,
  abandon-scn-pct: ${?ABANDON_SCN_PCT}
  abandon-scn-pct: 1
}

bitbucket {
  project-key = ${?PROJECT_KEY}

  slug = ${?REPOSITORY}
  slug = ${?SLUG}
}

gerrit {
  account-cookie = ${?ACCOUNT_COOKIE}
  xsrf-token = ${?XSRF_TOKEN}

  rest-run-anonymous-user = true
  rest-run-anonymous-user = ${?REST_RUN_ANONYMOUS_USER}

  reviewer-account = 1000000
  reviewer-account = ${?REVIEWER_ACCOUNT}
}

http {
  username: "default_username",
  username: ${?GIT_HTTP_USERNAME},

  password: "default_password",
  password: ${?GIT_HTTP_PASSWORD},
}

ssh {
  private_key_path: ${HOME}"/.ssh/id_rsa",
  private_key_path: ${?GIT_SSH_PRIVATE_KEY_PATH},
}

tmpFiles {
  basePath: "/tmp"
  basePath: ${?TMP_BASE_PATH}
}

commands {
  push {
    numFiles: 4
    numFiles: ${?NUM_FILES}
    minContentLength: 100
    minContentLength: ${?MIN_CONTENT_LEGTH}
    maxContentLength: 10000
    maxContentLength: ${?MAX_CONTENT_LEGTH}
    commitPrefix: ""
    commitPrefix: ${?COMMIT_PREFIX}
  }
}

git {
  commandTimeout: "30"
  commandTimeout: ${?GIT_TIMEOUT}
  showProgress: false
}
