{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2fadf71_e4505b72",
        "filename": "Makefile",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Are we changing the default behaviour here for `run`? Shouldn\u0027t this be mentioned in the commit message?",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76534388_a0d4e4c1",
        "filename": "Makefile",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "No? The simulation has changed name from `GerritGitSimulation` to `GitSimulation`, that\u0027s all, I think?",
      "parentUuid": "b2fadf71_e4505b72",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "932fad00_0c37598c",
        "filename": "Makefile",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-10T09:11:21Z",
      "side": 1,
      "message": "Ah, yes - I missed that - it\u0027s in a parent. In which case, doesn\u0027t this change belong in that change?",
      "parentUuid": "76534388_a0d4e4c1",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0623df0a_2c2d1133",
        "filename": "Makefile",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-14T14:55:33Z",
      "side": 1,
      "message": "Sorry yes, must have missed it there.",
      "parentUuid": "932fad00_0c37598c",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f427857_b4c86671",
        "filename": "simulation.env",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Does this change the default backend to BitBucket? Won\u0027t this break existing code that runs these tests?",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0b876b3_a69792e2",
        "filename": "simulation.env",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "My bad, didn\u0027t mean to commit it set to bitbucket.",
      "parentUuid": "8f427857_b4c86671",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46473df3_ef9fc018",
        "filename": "src/test/scala/gerritforge/GerritRealLifeSimulation.scala",
        "patchSetId": 18
      },
      "lineNbr": 99,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Doesn\u0027t this put us in the awkward position of being able to run `GerritRealLifeSimulation` with a non-Gerrit backend?",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40631d66_96e71636",
        "filename": "src/test/scala/gerritforge/GerritRealLifeSimulation.scala",
        "patchSetId": 18
      },
      "lineNbr": 99,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-10T07:55:55Z",
      "side": 1,
      "message": "yeah good point, will pass the Gerrit backend directly.",
      "parentUuid": "46473df3_ef9fc018",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a736fbc_72f8688e",
        "filename": "src/test/scala/gerritforge/config/GerritConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 11,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Nit: this could be done in the parent change (where the config objects are split).",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b351e7c_6205fc5c",
        "filename": "src/test/scala/gerritforge/config/GerritConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 11,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "Good point, I meant to do it there, thanks.",
      "parentUuid": "5a736fbc_72f8688e",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7600ea6_71c95097",
        "filename": "src/test/scala/gerritforge/config/GerritConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 11,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-10T07:57:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b351e7c_6205fc5c",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e786931_3752cfcb",
        "filename": "src/test/scala/gerritforge/config/HttpConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 8,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Nit: we are reading the config file three times from disk. Maybe it would be better to have a single read of the config file and create our separate config instances in the same place? Not a biggie, maybe one for a separate change.",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e83e975d_b013e0d1",
        "filename": "src/test/scala/gerritforge/config/SimulationConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 25,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "It would be better to have an explicit case for Gerrit so we catch typos in config (e.g. `bitbukcet`), and have the default case error.",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcb0eccd_fe17a3d5",
        "filename": "src/test/scala/gerritforge/config/SimulationConfig.scala",
        "patchSetId": 18
      },
      "lineNbr": 25,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e83e975d_b013e0d1",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef59ed88_918368a9",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Nit: this doesn\u0027t look like an ADT, and I don\u0027t think we use it in a pattern match. Maybe a regular class would be a better fit for it.",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daf92ceb_31934c56",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Nit: as we always call this with an empty paren set, maybe making this a `val` and hard-coding `LOAD` would be simpler. We can always parameterise it later if required, we don\u0027t need to now though.",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cea77e5_d17c5447",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "yeah this bit actually changes entirely when we get to configuring bitbucket properly, so maybe not much point addressing it here.",
      "parentUuid": "daf92ceb_31934c56",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "319e3f9a_0b8de90d",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-10T09:11:21Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8cea77e5_d17c5447",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "860061fa_6a21f23a",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 24,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Do we risk creating the same branch name twice? Would it matter if we did?",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494a33a8_80c06f66",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 24,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "yeah, I was thinking about this too. It might be worth adding a some sort of run-id so we don\u0027t risk creating the same branch twice over multiple runs. I suspect that it would cause the call to fail.",
      "parentUuid": "860061fa_6a21f23a",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c0bb80d_d671a6d1",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 24,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2024-05-14T21:27:14Z",
      "side": 1,
      "message": "What about adding the timestamp of the branch creation?",
      "parentUuid": "494a33a8_80c06f66",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f91cc86_475b8392",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 24,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-15T10:01:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c0bb80d_d671a6d1",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7be88f28_7d21d162",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 50,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T11:08:03Z",
      "side": 1,
      "message": "So, I\u0027m having to use the HTTP url to create the change as it needs to be a post request.\nThis applies whether we\u0027re doing an SSH or HTTP simulation. The main downfall is that we\u0027re forcing the user to always run the http simulation if they want to test bitbucket.\n\nI could add a bitbucket specific config that is the same value, this way one can only run the SSH simulation, but not the HTTP one.\n\nHowever, didn\u0027t think it was a particularly clean solution, so open to suggestions.",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28761a34_385796ec",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 50,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Do you mean bitbucket doesn\u0027t support pushes over ssh?\n\nWould it make sense to add the protocol as an argument to the class?\n\nAlso (tangential), would a typeclass represent the push more tidily?",
      "parentUuid": "7be88f28_7d21d162",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f171a166_81c83d42",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 50,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-09T15:22:12Z",
      "side": 1,
      "message": "No, bitbucket does support pushing over ssh(as I do from L37-46, if the protocol is SSH), the problem is that bitbucket doesn\u0027t support creating a PR over SSH, that needs to be a separate HTTP call. I suspect this will be the case for Github and Gitlab too.",
      "parentUuid": "28761a34_385796ec",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "208d3aea_80e73742",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 50,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2024-05-14T21:27:14Z",
      "side": 1,
      "message": "\u003e The main downfall is that we\u0027re forcing the user to always run the http simulation if they want to test bitbucket.\n\nI think that\u0027s the nature of bitbucket, so the PR creation will always for through HTTP. I don\u0027t think it is a big deal, unless I am missing something.",
      "parentUuid": "f171a166_81c83d42",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8729a1_dad3c14f",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 50,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-15T09:20:29Z",
      "side": 1,
      "message": "What I\u0027m saying is that if someone wanted to run only the SSH simulation, it would fail as an HTTP url is still required for the bitbucket simulation.\nCurrently if an HTTP url is defined, it will run the HTTP simulation, if it\u0027s not defined, it won\u0027t run the HTTP simulation.\n\nHowever, now I\u0027m coupling the definition of the HTTP url to the success of the SSH scenario too, hence my suggestion of creating an additional config.",
      "parentUuid": "208d3aea_80e73742",
      "range": {
        "startLine": 50,
        "startChar": 10,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "695542b4_fe24b2a0",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 89,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "This could be more consistent with `apiBaseUrl`. Maybe `httpBaseUrl`? Or call the other one `baseApiUrl`.",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26c1fc1b_96b8c9fa",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 89,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-10T07:55:55Z",
      "side": 1,
      "message": "Thanks for pointing it out, this also checks of non-http backends, so I\u0027ve just called it baseUrl",
      "parentUuid": "695542b4_fe24b2a0",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65063f00_eda1ce32",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 94,
      "author": {
        "id": 1019805
      },
      "writtenOn": "2024-05-09T14:07:38Z",
      "side": 1,
      "message": "Looking at where this is called, you could hide this logic from the caller by adding a method `projectUrl(baseUrl: String, projectName: String)` (or similar) to `GitServer`. It would make your call sites cleaner and development easier as they wouldn\u0027t need to remember to make the additional call to `httpUrlSuffix`.\n\nEDIT: actually do we even need `projectName` if `repository` is defined as a class param? Maybe requires a bit more thought?",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7d5d922_7066c062",
        "filename": "src/test/scala/gerritforge/scenarios/git/backend/BitBucket.scala",
        "patchSetId": 18
      },
      "lineNbr": 94,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-05-10T07:55:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65063f00_eda1ce32",
      "revId": "b193d8471c8332f5309a5ba57f67212a35514cbd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}