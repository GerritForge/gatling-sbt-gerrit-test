{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "95526572_0cf1d1de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1020779
      },
      "writtenOn": "2023-06-26T13:17:12Z",
      "side": 1,
      "message": "Please, can you describe the issue in the commit?",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91d2b9e8_3485a00d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2023-06-27T12:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95526572_0cf1d1de",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "409ed7c5_96c73e8f",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1020779
      },
      "writtenOn": "2023-06-26T13:17:12Z",
      "side": 1,
      "message": "why dont you extract this into a variable? maybe it would be more readable. up to you.",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c322b07_12aa324d",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1005963
      },
      "writtenOn": "2023-06-26T13:29:34Z",
      "side": 1,
      "message": "Or making EncodeUtils a package object that would become just \n`${encode(testConfig.project)}`\nanyway, lgtm",
      "parentUuid": "409ed7c5_96c73e8f",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d04256b_6be89c7a",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2023-06-27T12:56:32Z",
      "side": 1,
      "message": "@Diego, here we\u0027re moving away from using the encoded project name, so we\u0027re using the NOT encoded project name.\n\n@Alvaro, I don\u0027t think this is that unreadable?",
      "parentUuid": "2c322b07_12aa324d",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6b01382_b8709d26",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1020779
      },
      "writtenOn": "2023-06-27T14:53:37Z",
      "side": 1,
      "message": "If you consider that is readable. fine by me.I was proposing.",
      "parentUuid": "8d04256b_6be89c7a",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "716410a8_d093e2ea",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1020779
      },
      "writtenOn": "2023-06-26T15:04:55Z",
      "side": 1,
      "message": "The java.util.Calendar class has several limitations and design flaws, and the newer java.time package provides a more intuitive and reliable API.\n\nyou could use:\n- LocalTime.now() method returns the current time based on the system clock. It provides more fine-grained control over time without the need to deal with calendar-specific details.\n-  use the ZonedDateTime class from java.time to obtain a date and time with time zone information.\n- you can use a clock are instal variable from `ChangeScenarioBase`:\n```\ntrait ChangeScenarioBase extends RestScenarioBase {\nval Clock clock\n...\n}\n```\nand you could get the time from the clock.",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a5bb028_fbe34d0f",
        "filename": "src/test/scala/gerritforge/scenarios/rest/changes/ChangeScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2023-06-26T15:58:55Z",
      "side": 1,
      "message": "Thanks for this, I\u0027ll address it as a follow up change though.",
      "parentUuid": "716410a8_d093e2ea",
      "revId": "0bb30e785f35aa3ac4ab89cbe8feb8d00c7b0579",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}