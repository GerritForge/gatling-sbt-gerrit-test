{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "647c0bda_c5429e8f",
        "filename": "src/test/scala/gerritforge/GerritOauthSimulation.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:07:49Z",
      "side": 1,
      "message": "Why 1? Should this be `SimulationConfig.numUsers` instead?",
      "range": {
        "startLine": 27,
        "startChar": 34,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "305edb3d_3f2646f0",
        "filename": "src/test/scala/gerritforge/GerritOauthSimulation.scala",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1005963
      },
      "writtenOn": "2024-12-16T14:58:22Z",
      "side": 1,
      "message": "Done. However, I’m not sure why we need to test with multiple users. These are functional tests, and load testing the OAuth provider doesn’t seem to provide any real benefit.",
      "parentUuid": "647c0bda_c5429e8f",
      "range": {
        "startLine": 27,
        "startChar": 34,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ccaa0c9_d2e07af7",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidCredentialsLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:26:11Z",
      "side": 1,
      "message": "Invalid ScalaFmt",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f886ae5_97099126",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidCredentialsLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:27:52Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1ccaa0c9_d2e07af7",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6ccdd0e_bb39805a",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidUserLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:07:49Z",
      "side": 1,
      "message": "This is absolutely *identical* to the `InvalidCredentialsLogin` scenario: having a non-existent user or a wrong credential is from an OAuth authentication perspective the same exact scenario.\n\nWhat is the rationale of having this copy\u0026paste scenario?\n\nBear in mind that we want to test Gerrit\u0027s OAuth authentication and NOT that KeyCloak is working.",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8c27e8d_b60b7047",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidUserLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:26:11Z",
      "side": 1,
      "message": "Invalid ScalaFmt",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a328767_3ec7039c",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidUserLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8c27e8d_b60b7047",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39ce8c2a_54819dfe",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/InvalidUserLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1005963
      },
      "writtenOn": "2024-12-16T14:58:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b6ccdd0e_bb39805a",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19b78150_a35d2b20",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/OauthScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:26:11Z",
      "side": 1,
      "message": "Invalid ScalaFmt",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e993c8e7_538a3eaf",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/OauthScenarioBase.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19b78150_a35d2b20",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70472647_ba2ff9d0",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/SuccessfulLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:26:11Z",
      "side": 1,
      "message": "Invalid ScalaFmt",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "058ea0f0_79da4d30",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/SuccessfulLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70472647_ba2ff9d0",
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e0f507f_11262d23",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/SuccessfulLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-14T21:07:49Z",
      "side": 1,
      "message": "This isn\u0027t enough: we also need to issue a redirection to the final URL and make sure that the Gerrit session is logged in.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59751049_9bc15471",
        "filename": "src/test/scala/gerritforge/scenarios/oauth/SuccessfulLogin.scala",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1005963
      },
      "writtenOn": "2024-12-16T14:58:22Z",
      "side": 1,
      "message": "Good point, I missed it in the initial patchset, was just checking that the oauth provider would redirect to Gerrit. Done",
      "parentUuid": "7e0f507f_11262d23",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "391c8d6c10653b4aaf62722e487ba1e681818c34",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}